---
import type { Language } from "../../../types/language.type";
import ProjectsLayout from "../../../layouts/ProjectsLayout.astro";
import es from "../../../i18n/es";
import en from "../../../i18n/en";
import login from "../../../assets/faithFinder/login.webp";
import busqueda from "../../../assets/faithFinder/busqueda.webp";
import panelAdmin from "../../../assets/faithFinder/panelAdmin.webp";
import "../../../styles/global.css";
import { Image } from "astro:assets";
const lang = Astro.params.lang as Language;
const translations: Record<Language, typeof es> = { es, en };
const t = translations[lang];
const project = t.projects.detail.find((p) => p.slug === "FaithFinder");
if (!project) throw new Error("No se encontró el proyecto FaithFinder");
export function getStaticPaths() {
    return [
        { params: { lang: "es", slug: "FaithFinder" } },
        { params: { lang: "en", slug: "FaithFinder" } },
    ];
}
---


<ProjectsLayout lang={lang} t={t}>
    <div
        id="animated-bg"
        class="fixed inset-0 -z-10 bg-gradient-to-br from-orange-100 via-white to-orange-400"
    ></div>

    <main class="relative overflow-x-hidden text-gray-900 dark:text-white">
        <a href={`/${lang}`} class="fixed top-6 left-6 z-50 flex items-center gap-2 px-4 py-2 bg-white/80 dark:bg-black/60 backdrop-blur-md text-indigo-700 dark:text-indigo-300 font-semibold rounded-xl shadow-lg hover:scale-105 transition-transform">
            <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
            </svg>
            Volver
        </a>

        <section class="min-h-screen flex flex-col justify-center items-center text-center px-6 py-20">
            <h1 class="text-5xl lg:text-6xl font-extrabold mb-6 hero-title">
                {project.title}
            </h1>
            <p class="text-xl max-w-3xl hero-text">
                {project.description}
            </p>
        </section>

        <section class="min-h-screen flex flex-col items-center justify-center px-6 py-24 login-panel">
            <h2 class="text-4xl font-bold mb-4 login-title">Login y favoritos</h2>
            <p class="text-lg max-w-xl mb-8 login-text">
                Ingreso seguro, historial de búsqueda, favoritos personales.
            </p>
            <div class="flex flex-wrap gap-6 justify-center login-imgs">
                <Image src={login} alt="Login" width={800} height={800} class="rounded-2xl shadow-xl zoomable" />
                <Image src={login} alt="Favoritos" width={800} height={800} class="rounded-2xl shadow-xl zoomable" />
            </div>
        </section>

        <section class="min-h-screen flex flex-col items-center justify-center px-6 py-24 filters-panel">
            <h2 class="text-4xl font-bold mb-4 filters-title">Filtros Avanzados</h2>
            <p class="text-lg max-w-xl mb-8 filters-text">
                Filtra por testamento, versión, idioma o libro con facilidad.
            </p>
            <div class="flex flex-wrap gap-6 justify-center filters-imgs">
                <Image src={busqueda} alt="Filtros" width={800} height={800} class="rounded-2xl shadow-xl zoomable" />
            </div>
        </section>

        <section class="min-h-screen flex flex-col items-center justify-center px-6 py-24 pdf-panel">
            <h2 class="text-4xl font-bold mb-4 pdf-title">Exportar PDF y Admin</h2>
            <p class="text-lg max-w-xl mb-8 pdf-text">
                Exporta tus capítulos favoritos, administra usuarios bloqueados.
            </p>
            <div class="flex flex-wrap gap-6 justify-center pdf-imgs">
                <Image src={panelAdmin} alt="Descarga PDF" width={800} height={800} class="rounded-2xl shadow-xl zoomable" />
                <Image src={panelAdmin} alt="Admin panel" width={800} height={800} class="rounded-2xl shadow-xl zoomable" />
            </div>
        </section>
    </main>

    <style>
        #animated-bg {
            background-size: 400% 400%;
            animation: gradientMove 15s ease infinite;
        }

        @keyframes gradientMove {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
    </style>

    <script>
        import gsap from "gsap";
        import { ScrollTrigger } from "gsap/ScrollTrigger";
        gsap.registerPlugin(ScrollTrigger);

        const panels = [
            { key: "hero", title: ".hero-title", text: ".hero-text" },
            { key: "login", title: ".login-title", text: ".login-text", imgs: ".login-imgs img" },
            { key: "filters", title: ".filters-title", text: ".filters-text", imgs: ".filters-imgs img" },
            { key: "pdf", title: ".pdf-title", text: ".pdf-text", imgs: ".pdf-imgs img" },
        ];

        panels.forEach(({ title, text, imgs }) => {
            gsap.from(title, {
                scrollTrigger: { trigger: title, start: "top 85%" },
                opacity: 0,
                y: -50,
                duration: 1,
                ease: "back.out(1.7)",
            });

            gsap.from(text, {
                scrollTrigger: { trigger: text, start: "top 90%" },
                opacity: 0,
                y: 50,
                duration: 1,
                delay: 0.2,
                ease: "power3.out",
            });

            if (imgs) {
                gsap.from(imgs, {
                    scrollTrigger: { trigger: imgs, start: "top 95%" },
                    opacity: 0,
                    scale: 0.8,
                    stagger: 0.2,
                    duration: 1.2,
                    ease: "expo.out",
                });
            }
        });
    </script>
</ProjectsLayout>

