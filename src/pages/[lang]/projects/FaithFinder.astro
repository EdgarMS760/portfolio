---
import type { Language } from "../../../types/language.type";
import ProjectsLayout from "../../../layouts/ProjectsLayout.astro";
import es from "../../../i18n/es";
import en from "../../../i18n/en";
import login from "../../../assets/faithFinder/login.webp";
import busqueda from "../../../assets/faithFinder/busqueda.webp";
import panelAdmin from "../../../assets/faithFinder/panelAdmin.webp";
import advsearch from "../../../assets/faithFinder/advSearch.webp";
import editInfo from "../../../assets/faithFinder/editInfo.webp";
import faithFinderHorpng from "../../../assets/faithFinder/faithFinderHorpng.webp";
import favoritos from "../../../assets/faithFinder/favoritos.webp";

import net from "../../../assets/iconos/NETFramework.svg"
import microsoftSql from "../../../assets/iconos/MicrosoftSQL.svg";

import "../../../styles/global.css";
import { Image } from "astro:assets";
const lang = Astro.params.lang as Language;
const translations: Record<Language, typeof es> = { es, en };
const t = translations[lang];
const project = t.projects.detail.find((p) => p.slug === "FaithFinder");
if (!project) throw new Error("No se encontr√≥ el proyecto FaithFinder");
export function getStaticPaths() {
    return [
        { params: { lang: "es", slug: "FaithFinder" } },
        { params: { lang: "en", slug: "FaithFinder" } },
    ];
}
---

<ProjectsLayout lang={lang} t={t}>
    <div
        id="animated-bg"
        class="fixed inset-0 -z-10 bg-gradient-to-br from-orange-100 via-white to-orange-400"
    >
    </div>

    <main class="relative overflow-x-hidden text-gray-900 dark:text-white">
        <a
            href={`/${lang}`}
            class="fixed top-6 left-6 z-50 flex items-center gap-2 px-4 py-2 bg-white/80 dark:bg-black/60 backdrop-blur-md text-black font-semibold rounded-xl shadow-lg hover:scale-105 transition-transform"
        >
            <svg
                xmlns="http://www.w3.org/2000/svg"
                class="w-5 h-5"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
            >
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15 19l-7-7 7-7"></path>
            </svg>
            {lang === "es" ? "Volver" : "Back"}
        </a>

        <section
            class="min-h-screen flex flex-col justify-center items-center text-center px-6 py-48"
        >
            <Image
                src={faithFinderHorpng}
                alt="FaithFinder Logo"
                width={2000}
                height={2000}
                class="max-w-64 h-auto object-contain rounded-full h-24 sm:h-24 border-t-4 border-white mb-8"
            />
            <p class="text-xl max-w-3xl hero-text">
                {project.description}
            </p>
            <div
                    class="filter invert flex items-center justify-center gap-4 mt-4"
                >
                    <Image
                        src={net}
                        alt=".NET Framework"
                        title=".NET Framework"
                        class="w-16 h-16"
                        width={48}
                        height={48}
                        loading={"eager"}
                    />
                    <Image
                        src={microsoftSql}
                        alt="Microsoft SQL Server"
                        title="Microsoft SQL Server"
                        class="w-16 h-16"
                        width={48}
                        height={48}
                        loading={"eager"}
                    />
                </div>
        </section>

        
        <section
            class="min-h-screen flex flex-col items-center justify-center px-6 py-24 filters-panel"
        >
            <h2 class="text-4xl font-bold mb-4 filters-title">
                {project.features[1].title}
            </h2>
            <p class="text-lg max-w-xl mb-8 filters-text">
                {project.features[1].description}
            </p>
            <div class="flex flex-wrap gap-6 justify-center filters-imgs">
                <Image
                    src={busqueda}
                    alt="Filtros"
                    width={800}
                    height={800}
                    class="rounded-2xl shadow-xl zoomable"
                />
                <Image
                    src={advsearch}
                    alt="advanced search"
                    width={800}
                    height={800}
                    class="rounded-2xl shadow-xl zoomable"
                />
            </div>
        </section>
        <section
            class="min-h-screen flex flex-col items-center justify-center px-6 py-12 login-panel"
        >
            <h2 class="text-4xl font-bold mb-4 login-title">
                {project.features[0].title}
            </h2>
            <p class="text-lg max-w-xl mb-8 login-text">
                {project.features[0].description}
            </p>
            <div class="flex flex-wrap gap-6 justify-center login-imgs">
                <Image
                    src={login}
                    alt="Login"
                    width={1000}
                    height={1000}
                    class="rounded-2xl shadow-xl zoomable"
                />
                <Image
                    src={favoritos}
                    alt="Favoritos"
                    width={800}
                    height={800}
                    class="rounded-2xl shadow-xl zoomable"
                />
            </div>
        </section>


        <section
            class="min-h-screen flex flex-col items-center justify-center px-6 py-24 pdf-panel"
        >
            <h2 class="text-4xl font-bold mb-4 pdf-title">
                {project.features[2].title}
            </h2>
            <p class="text-lg max-w-xl mb-8 pdf-text">
                {project.features[2].description}
            </p>
            <div class="flex flex-wrap gap-6 justify-center pdf-imgs">
                <Image
                    src={panelAdmin}
                    alt="Admin panel"
                    width={800}
                    height={800}
                    class="rounded-2xl shadow-xl zoomable"
                />
                <Image
                    src={editInfo}
                    alt="edit info"
                    width={800}
                    height={800}
                    class="rounded-2xl shadow-xl zoomable"
                />
            </div>
        </section>
    </main>

    <style>
        #animated-bg {
            background-size: 400% 400%;
            animation: gradientMove 15s ease infinite;
        }

        @keyframes gradientMove {
            0% {
                background-position: 0% 50%;
            }
            50% {
                background-position: 100% 50%;
            }
            100% {
                background-position: 0% 50%;
            }
        }
    </style>

    <script>
        import gsap from "gsap";
        import { ScrollTrigger } from "gsap/ScrollTrigger";
        gsap.registerPlugin(ScrollTrigger);

        const panels = [
            { key: "hero", title: ".hero-title", text: ".hero-text" },
            {
                key: "login",
                title: ".login-title",
                text: ".login-text",
                imgs: ".login-imgs img",
            },
            {
                key: "filters",
                title: ".filters-title",
                text: ".filters-text",
                imgs: ".filters-imgs img",
            },
            {
                key: "pdf",
                title: ".pdf-title",
                text: ".pdf-text",
                imgs: ".pdf-imgs img",
            },
        ];

        panels.forEach(({ title, text, imgs }) => {
            gsap.from(title, {
                scrollTrigger: { trigger: title, start: "top 85%" },
                opacity: 0,
                y: -50,
                duration: 1,
                ease: "back.out(1.7)",
            });

            gsap.from(text, {
                scrollTrigger: { trigger: text, start: "top 90%" },
                opacity: 0,
                y: 50,
                duration: 1,
                delay: 0.2,
                ease: "power3.out",
            });

            if (imgs) {
                gsap.from(imgs, {
                    scrollTrigger: { trigger: imgs, start: "top 95%" },
                    opacity: 0,
                    scale: 0.8,
                    stagger: 0.2,
                    duration: 1.2,
                    ease: "expo.out",
                });
            }
        });
        window.addEventListener("DOMContentLoaded", () => {
            if (window.mediumZoom) {
                mediumZoom(".zoomable", {
                    background: "rgba(0, 0, 0, 0.7)",
                    margin: 24,
                    scrollOffset: 40
                });
            }
        });
    </script>
</ProjectsLayout>
