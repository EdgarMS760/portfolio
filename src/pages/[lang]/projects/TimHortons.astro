---
import es from "../../../i18n/es";
import en from "../../../i18n/en";
import type { Language } from "../../../types/language.type";
import "../../../styles/global.css";
import ProjectsLayout from "../../../layouts/ProjectsLayout.astro";
import dash1 from "../../../assets/interfaces/dash1.webp";
import dash2 from "../../../assets/interfaces/dash2.webp";
import dash3 from "../../../assets/interfaces/dash3.webp";
import dash4 from "../../../assets/interfaces/dash4.webp";
import dash5 from "../../../assets/interfaces/dash5.webp";
import login from "../../../assets/interfaces/login.webp";
import register from "../../../assets/interfaces/register.webp";
import pago1 from "../../../assets/interfaces/pago1.webp";
import pago2 from "../../../assets/interfaces/pago2.webp";
import pago3 from "../../../assets/interfaces/pago3.webp";
import logo from "../../../assets/interfaces/Tim_Hortons_Logo_White.png";
import react from "../../../assets/iconos/React.svg";
import python from "../../../assets/iconos/Python.svg";
import flask from "../../../assets/iconos/Flask.svg";
import { Image } from "astro:assets";

const lang = Astro.params.lang as Language;
const translations: Record<Language, typeof es> = { es, en };
const t = translations[lang];
const project = t.projects.detail.find((p) => p.slug === "TimHortons");
if (!project) throw new Error("No se encontr√≥ el proyecto 'TimHortons'");
export function getStaticPaths() {
    return [
        { params: { lang: "es", slug: "TimHortons" } },
        { params: { lang: "en", slug: "TimHortons" } },
    ];
}
---

<style>
    html {
        scroll-snap-type: y mandatory;
        scroll-behavior: smooth;
    }

    section {
        scroll-snap-align: start;
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding: 6rem 1.5rem;
        overflow: hidden;
        position: relative;
        transition: background 1s ease;
    }

    .panel-content {
        max-width: 1200px;
        margin: auto;
        text-align: center;
        position: relative;
        z-index: 10;
    }

    .section-images {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 1.5rem;
        margin-top: 2rem;
    }

    .section-images img {
        max-width: 480px;
        width: 100%;
        border-radius: 1rem;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
        transition: transform 0.5s ease;
    }

    .section-images img:hover {
        transform: scale(1.05);
    }

    .return-btn {
        position: fixed;
        top: 1rem;
        left: 1rem;
        z-index: 50;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        background: white;
        color: black;
        padding: 0.5rem 1rem;
        border-radius: 9999px;
        font-weight: bold;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
        transition: all 0.3s ease;
    }

    .return-btn:hover {
        transform: scale(1.05) translateX(4px);
        background: #f3f3f3;
    }

    .return-btn svg {
        width: 1.2rem;
        height: 1.2rem;
    }

    .overlay-gradient {
        position: absolute;
        inset: 0;
        opacity: 0.2;
        background: radial-gradient(circle, white 0%, transparent 70%);
        pointer-events: none;
        z-index: 0;
    }
    .medium-zoom-overlay {
        z-index: 9998 !important;
    }

    .medium-zoom-image--opened {
        z-index: 9999 !important;
        position: relative;
    }
</style>

<ProjectsLayout lang={lang} t={t}>
    <main style={`background: linear-gradient(to bottom, ${project.color}, black)`}>
         <a href={`/${lang}`} class="return-btn">
            <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
            >
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15 19l-7-7 7-7"></path>
            </svg>
            {lang === "es" ? "Volver" : "Back"}
        </a>
        <section
            class="min-h-screen px-6 py-20 text-white text-center relative overflow-hidden"
        >
            <Image
                loading="eager"
                src={logo}
                alt="Tim Hortons logo"
                class="mx-auto w-96 mb-8 reveal"
            />

            <p class="mt-6 text-md max-w-3xl mx-auto reveal">
               {project.description}
            </p>
              <div
                    class="filter invert flex items-center justify-center gap-4 mt-4"
                >
                    <Image
                        src={react}
                        alt="React"
                        title="React"
                        class="w-12 h-12"
                        width={48}
                        height={48}
                        loading={"eager"}
                    />
                    <Image
                        src={python}
                        alt="Python"
                        title="Python"
                        class="w-12 h-12"
                        width={48}
                        height={48}
                        loading={"eager"}
                    />
                    <Image
                        src={flask}
                        alt="Flask"
                        title="Flask"
                        class="w-12 h-12"
                        width={48}
                        height={48}
                        loading={"eager"}
                    />
                </div>
            <Image
                loading="eager"
                src={dash2}
                alt="Tim Hortons dash2"
                class="mx-auto my-8 reveal rounded-xl shadow-lg zoomable"
                width={800}
                height={600}
            />
        </section>

        <section
            class="px-6 py-20 text-white"
        >
            <div
                class="max-w-6xl mx-auto grid md:grid-cols-2 gap-12 items-center"
            >
                <div class="space-y-4 reveal">
                    <h2 class="text-3xl font-bold">
                        {project.features[0].title}
                    </h2>
                    <p class="text-white">
                        {project.features[0].description}
                    </p>
                </div>
                <div
                    class="flex flex-col gap-6 justify-center items-center reveal"
                >
                    <Image
                        src={login}
                        alt="Login"
                        class="rounded-xl shadow-lg zoomable"
                    />
                    <Image
                        src={register}
                        alt="Registro"
                        class="rounded-xl shadow-lg zoomable"
                    />
                </div>
            </div>
        </section>

        <section
            class="px-6 py-20 text-white"
        >
            <div
                class="max-w-6xl mx-auto grid md:grid-cols-2 gap-12 items-center"
            >
               <div class="space-y-4 reveal">
                    <h2 class="text-3xl font-bold">
                        {project.features[1].title}
                    </h2>
                    <p class="text-white">
                        {project.features[1].description}
                    </p>
                </div>
                <div class="grid grid-cols-1 gap-4 reveal">
                    <Image
                        src={dash1}
                        alt="Inicio 1"
                        class="rounded-xl shadow-lg zoomable"
                    />
                    <Image
                        src={dash2}
                        alt="Inicio 2"
                        class="rounded-xl shadow-lg zoomable"
                    />
                    <Image
                        src={dash3}
                        alt="Inicio 3"
                        class="rounded-xl shadow-lg zoomable"
                    />
                </div>
                
            </div>
        </section>

        <section
            class="px-6 py-20 text-white"
        >
            <div
                class="max-w-6xl mx-auto grid md:grid-cols-2 gap-12 items-center"
            >
                <div class="space-y-4 reveal">
                    <h2 class="text-3xl font-bold">{project.features[2].title}</h2>
                    <p class="text-white">
                        {project.features[2].description}
                    </p>
                </div>
                <div class="grid grid-cols-1 gap-4 reveal">
                    <Image
                        src={pago1}
                        alt="Pago 1"
                        class="rounded-xl shadow-lg w-full h-auto zoomable"
                    />
                    <Image
                        src={pago2}
                        alt="Pago 2"
                        class="rounded-xl shadow-lg w-full h-auto zoomable"
                    />
                    <Image
                        src={pago3}
                        alt="Pago 3"
                        class="rounded-xl shadow-lg w-full h-auto zoomable"
                    />
                </div>
            </div>
        </section>
    </main>
    <script>
        import gsap from "gsap";
        import { ScrollTrigger } from "gsap/ScrollTrigger";
        gsap.registerPlugin(ScrollTrigger);

        const revealElements = document.querySelectorAll(".reveal");

        revealElements.forEach((el, i) => {
            gsap.fromTo(
                el,
                { opacity: 0, y: 60, scale: 0.97 },
                {
                    opacity: 1,
                    y: 0,
                    scale: 1,
                    duration: 0.8,
                    ease: "power3.out",
                    scrollTrigger: {
                        trigger: el,
                        start: "top 85%",
                        toggleActions: "play none none none",
                    },
                },
            );
        });
        window.addEventListener("DOMContentLoaded", () => {
            if (window.mediumZoom) {
                mediumZoom(".zoomable", {
                    background: "rgba(0, 0, 0, 0.7)",
                    margin: 24,
                    scrollOffset: 40,
                });
            }
        });
    </script>
</ProjectsLayout>
