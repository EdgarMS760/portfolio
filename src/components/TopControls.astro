---
const { currentLang, languages } = Astro.props;
---

<div class="fixed top-4 right-4 z-50 flex items-center gap-4">
  <!-- Switch Dark Mode -->
  <button
    id="theme-toggle"
    class="cursor-pointer w-10 h-10 rounded-full border border-gray-400 dark:border-white flex items-center justify-center transition-colors"
    aria-label="Toggle dark mode"
  >
    <span id="theme-icon" class="text-xl">ðŸŒž</span>
  </button>

  <!-- Language Switch -->
<form id="lang-form" class="text-sm relative inline-block">
  <div class="relative">
    <select
      id="lang-select"
      name="lang"
      class="bg-white dark:bg-gray-800 dark:text-white border border-gray-300 dark:border-gray-600 rounded-lg px-4 py-2 pr-10 appearance-none focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors duration-200 w-full cursor-pointer"
    >
      {
        languages.map((langOpt) => (
          <option
            value={langOpt.code}
            selected={langOpt.code === currentLang}
            class="text-black dark:text-white bg-white dark:bg-gray-800"
          >
            {langOpt.label}
          </option>
        ))
      }
    </select>

    <!-- Flecha del select personalizada -->
    <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center pr-3">
      <svg class="w-4 h-4 text-gray-500 dark:text-gray-300" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M10 12a1 1 0 01-.707-.293l-3-3a1 1 0 111.414-1.414L10 9.586l2.293-2.293a1 1 0 111.414 1.414l-3 3A1 1 0 0110 12z" clip-rule="evenodd" />
      </svg>
    </div>
  </div>
</form>



</div>

<script is:inline>
  const toggleButton = document.getElementById("theme-toggle");
  const html = document.documentElement;
  const icon = document.getElementById("theme-icon");

  if (localStorage.theme === "dark") {
    html.classList.add("dark");
    icon.textContent = "ðŸŒ™";
  }

  toggleButton.addEventListener("click", () => {
    const isDark = html.classList.toggle("dark");
    localStorage.theme = isDark ? "dark" : "light";
    icon.textContent = isDark ? "ðŸŒ™" : "ðŸŒž";
  });
</script>
<script>
  const select = document.getElementById(
    "lang-select",
  ) as HTMLSelectElement | null;

  select?.addEventListener("change", ({ target }) => {
    const selectedLang = (target as HTMLSelectElement).value;
    const newPath = window.location.pathname.replace(
      /^\/(es|en)/,
      `/${selectedLang}`,
    );
    window.location.pathname = newPath;
  });
</script>
